services:
  nocodb: 
    container_name: "nocodb"
    restart: unless-stopped
    security_opt:       
      - no-new-privileges:true 
    depends_on: 
      postgres: 
        condition: service_healthy
    environment: 
      NC_DB: pg://postgres:5432?u=$POSTGRES_USER&p=$POSTGRES_PASSWORD&d=$POSTGRES_DB
    image: "nocodb/nocodb:latest"
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.nocodb.rule=Host(`${HTTPS_DOMAIN}`)"
      - "traefik.http.routers.nocodb.entrypoints=websecure"
      - "traefik.http.routers.nocodb.tls.certresolver=letsencrypt"
      - "traefik.http.services.nocodb.loadbalancer.server.port=8080"
    #ports: 
    #  - "8080:8080"
    volumes: 
      - "nocodb:/usr/app/data"
    networks:
      - nocodb-app
      - traefik

  postgres: 
    container_name: "postgres_nocodb"
    restart: unless-stopped
    security_opt:       
      - no-new-privileges:true 
    environment: 
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck: 
      interval: 10s
      retries: 10
      test: "pg_isready -U \"$$POSTGRES_USER\" -d \"$$POSTGRES_DB\""
      timeout: 2s
    image: postgres:16.6
    volumes: 
      - "postgres:/var/lib/postgresql/data"
    networks:
      - nocodb-app

volumes:
  nocodb:
  postgres:

networks:
  traefik_proxy:
    name: "traefik"
    external: true
  nocodb_app:
    name: "nocodb-app"